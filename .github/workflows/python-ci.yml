name: python-ci

on:
  push:
    branches-ignore:
      - main

jobs:
  check-semantic-version:
    if: "!contains(github.event.head_commit.message, 'skipci')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Set fetch-depth to 0 to fetch all tags (necessary for git-mkver to determine the correct semantic version).
          fetch-depth: 0
      - uses: actions/setup-python@v2
      - name: Install git-mkver
        run: |
          curl -L https://github.com/idc101/git-mkver/releases/download/v1.2.1/git-mkver-linux-amd64-1.2.1.tar.gz \
          | tar xvz \
          && sudo mv git-mkver /usr/local/bin
      - name: Install semantic version checker
        run: pip install git+https://github.com/octue/conventional-commits
      - name: Check version
        run: check-semantic-version setup.py

  run-tests:
    if: "!contains(github.event.head_commit.message, 'skipci')"
    runs-on: ${{ matrix.os }}
    env:
      USING_COVERAGE: "3.8"
    strategy:
      matrix:
        python: [3.8]
        os: [ubuntu-latest]
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install tox
        run: pip install tox

      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v0.6.0
        with:
          # NOTE: If setting create_credentials_file=true, .dockerignore file must include `gha-creds-*.json` to avoid baking these credentials into build
          create_credentials_file: true
          workload_identity_provider: 'projects/885434704038/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
          service_account: 'openfast-service@aerosense-twined.iam.gserviceaccount.com'

      - name: Run tests
        env:
          GOOGLE_CLOUD_PROJECT: ${{ secrets.TEST_PROJECT_NAME }}
        run: tox -vv
